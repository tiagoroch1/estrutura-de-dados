Atividade 1 - Binary Search

Descrição do Algoritmo:
O Binary Search é um algoritmo de busca eficiente para listas ordenadas. Ele utiliza o princípio de dividir e conquistar, reduzindo pela metade o espaço de busca a cada iteração.

Funcionamento:
1. Inicialize dois ponteiros: `left` (início da lista) e `right` (fim da lista).
2. Calcule o índice do meio: `mid = (left + right) // 2`.
3. Compare o elemento no índice `mid` com o alvo:
   - Se forem iguais, retorne o índice `mid`.
   - Se o alvo for menor, mova o ponteiro `right` para `mid - 1`.
   - Se o alvo for maior, mova o ponteiro `left` para `mid + 1`.
4. Repita até encontrar o elemento ou esgotar o espaço de busca.

Complexidade:
- Tempo:
  - Melhor caso: O(1) (o elemento está no meio na primeira tentativa).
  - Caso médio e pior caso: O(log n), onde `n` é o tamanho da lista.
- Espaço: O(1), pois não utiliza memória extra significativa.

Exemplo de Execução:
Lista ordenada: [1, 3, 5, 7, 9, 11, 13]
Buscar elemento: 7

Passos:
1. Índices iniciais: left = 0, right = 6.
2. Cálculo: mid = (0 + 6) // 2 = 3.
3. Elemento no índice 3 é 7, que é igual ao alvo.
Resultado: Índice encontrado = 3.

Observação:
O Binary Search só funciona corretamente se a lista estiver previamente ordenada. Em listas desordenadas, a divisão da busca não seria válida, pois não há garantia de ordem.

Testes Realizados:
- Caso 1: Elemento no início da lista.
- Caso 2: Elemento no meio da lista.
- Caso 3: Elemento no final da lista.
- Caso 4: Elemento ausente.
- Caso 5: Lista vazia.
